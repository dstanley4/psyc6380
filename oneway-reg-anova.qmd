# One-way ANOVA via Regression

## Treatement/Dummy Coding

This approach is the default appraoch in R unless you specify otherwise. In most cases, this is NOT what you want in Psychology analyses.

Comparisons are to one specific level of the Independent Variables that we call the reference group.

```{r}
#| include: false
library(tidyverse)
library(janitor)
library(pracma)
library(recipes)
library(forcats)
library(apaTables)
library(tidymodels)

viagra <- apaTables::viagra %>% clean_names()

dose = viagra$dose

dose = fct_recode(dose,
                  placebo = "Placebo",
                  low_dose = "Low Dose",
                  high_dose = "High Dose")

viagra$dose = dose

dummies <- recipe(libido ~ dose, data = viagra) %>%
  step_dummy(dose) %>%
  prep() %>%
  bake(viagra)
print(dummies)


readr::write_csv(dummies, file = "viagra_dummy_coded.csv")


options(contrasts = c("contr.treatment", "contr.poly"))
lm_treament =  lm(libido ~ dose, data = viagra)

tidy(lm_treament)
glance(lm_treament)
apaTables::apa.aov.table(lm_treament)



# Constras stum - relative to grand mean

options(contrasts = c("contr.sum", "contr.poly"))
lm_sum = lm(libido ~ dose, data = viagra)

tidy(lm_sum)
glance(lm_sum)
apa.aov.table(lm_sum)


viagra <- viagra %>% select(libido, dose)

viagra_dummy_coded <- dummies

```

### Original Data

```{r}
print(viagra)
```


Note the means for the three groups are:

```{r}
viagra %>% group_by(dose) %>% summarise(group_mean = mean(libido))
```


### Set Factor with Reference Group

```{r}

viagra <- viagra %>%
  mutate(dose = as_factor(dose)) %>%
  mutate(dose = relevel(dose, ref = "placebo"))
```

### Regression with Treatment Contrast

The computer will always use contrasts when there are categorical variables. So you should set the contrast you want. Here we set the contrast as Treatment (or Dummy) Coding. In most cases you will not want Treatment Coding. You will want Sum Coding we cover that in the next section. But we start with Treament Coding because it is easier to understand.

```{r}

options(contrasts = c("contr.treatment", "contr.poly"))

lm_viagra <- lm(libido ~ dose, data = viagra)
```

```{r}
#| eval: false
tidy(lm_viagra)
```

```{r}
#| echo: false
knitr::kable(tidy(lm_viagra))
```

What is going on here? The single dose column has disappeared. Instead we get $b$-weights for doselow_dose and dosehigh_dose. How do you interpret that information?

### Treatment Contrasts Explained

In the above analysis, we take a categorical variable and indicate it's factor with the code below. With this code we are telling the computer it as a factor (i.e., a categorical variable) and indicating, with ref = "placebo", that all the group means should be compared to the placebo group mean - **if a treatment contrast is used**.

```{r}
#| eval: false

viagra <- viagra %>%
  mutate(dose = as_factor(dose)) %>%
  mutate(dose = relevel(dose, ref = "placebo"))
```

In conjuction with the above "as_factor" commmand, we specify the rule for turning the factor (i.e., categorical variables) into "contrast columns" that will be used for the actual analysis. We do that with the line below that indicates we want to use treatment coding also known as dummy coding. It is CRITICAL that you set the contrast used for your regression if you have categorical variables. 

```{r}
#| eval: false
options(contrasts = c("contr.treatment", "contr.poly"))

```

A contrast will ALWAYS be used if you have categorical variables - you want to make sure it's the one you want. Treatment Contrast is probably not the one you want in most cases - but we start with this one because it is common and easy to understand.

The combination of the two code blocks above (creating a factor, setting the contrast) results in the computer creating a data set like the one below when you conduct the regression.

```{r}
print(viagra_dummy_coded)
```

Then, when we specified this:

```{r}
#| eval: false
lm_viagra <- lm(libido ~ dose, data = viagra)
```

The computer actually ran the code below. Notice how the predictors are the contrast columns dose_low_dose and dose_high_dose. That's how the computer handles categorical variables in a regression.

```{r}
lm_viagra <- lm(libido ~ dose_low_dose + dose_high_dose,
                data = viagra_dummy_coded)
```

```{r}
#| eval: false
tidy(lm_viagra)
```

```{r}
#| echo: false
knitr::kable(tidy(lm_viagra))
```

**The $p$-values for the $b$-weights assess the statistical difference between each group and the reference group (i.e., placebo). So Treatment (Dummy) Contrasts are a great way to compare each group mean to the reference group.**

Examine the weights in the above table and see how they can be used to recreate the group means.

```{r}
#| echo: false
ggplot(data = viagra_dummy_coded,
       mapping = aes(x = dose,
                     y = libido)) +
  stat_summary(fun = mean,
               geom="bar") +
  annotate(geom = "text", label = "2.2000", x= 1, y = 2.2000+.2) +
  annotate(geom = "text", label = "2.2000 + 1.0000", x= 2, y = 2.2000+1.0000+.2) +
  annotate(geom = "text", label = "2.2000 + 2.8000", x= 3, y = 2.2000+2.8000+.2) +
  scale_y_continuous(breaks = seq(0, 5, by = .5)) +
  theme_light(12)
```

### ANOVA Summary Information

With a one-way ANOVA, it's easy to exact ANOVA information from the Regression output.

```{r}
#| eval: false
glance(lm_viagra)
```

```{r}
#| echo: false
knitr::kable(glance(lm_viagra))
```

From this output you can see that for this one-way ANOVA, $F$(2, 12) = 5.119, $p$ = .025. In a one-way ANOVA the effect size is $\eta^2 = \eta_{partial}^2=R^2= .46$. Note that in a one-way ANOVA, $\eta^2$ = $\eta_{partial}^2$ but this is not the case when you move to N-way ANOVA.

```{r}
summary(lm_viagra)
```

From this output you can (AGAIN) see that for this one-way ANOVA, $F$(2, 12) = 5.119, $p$ = .025. In a one-way ANOVA the effect size is $\eta^2 = \eta_{partial}^2=R^2= .46$.

Note: A good exam question would be to present a table like this an then ask you the mean for each group. With treatment/dummy coding the regression weight indicate for the reference group the mean of that group. For the other groups, the regression weights indicate the difference from the reference group.

## Sum Coding

With sum coding, the contrasts create $b$-weight represent comparisons of each group mean to the to the grand mean. What is the grand mean? It's just the mean of the dependent variable column across all conditions.

```{r}
summary_stat = viagra %>%
  summarise(grand_mean = mean(libido))

print(summary_stat)

```

You can see the grand mean is `r summary_stat`. This is just the mean of everyone in the experiment.

```{r}
viagra_sum_coded <- viagra %>% select(libido)

dose1 <- c(rep(1,5), rep(0,5), rep(-1,5))
dose2 <- c(rep(0,5), rep(1,5), rep(-1,5))

viagra_sum_coded$dose1 <- dose1
viagra_sum_coded$dose2 <- dose2

readr::write_csv(viagra_sum_coded, file = "viagra_sum_coded.csv")

```

### Behind the scenes

In the above analysis, when we used this code block:

```{r}
#| eval: false
options(contrasts = c("contr.sum", "contr.poly"))

viagra <- viagra %>%
  mutate(dose = as_factor(dose)) 
```

We were creating the data set below:

```{r}
print(viagra_sum_coded)
```

Above, when we specified this:

```{r}
#| eval: false
lm_viagra <- lm(libido ~ dose, data = viagra)
```

The computer actually ran this:

```{r}
lm_viagra_sum <- lm(libido ~ dose1 + dose2,
                data = viagra_sum_coded)
```

```{r}
#| eval: false
tidy(lm_viagra_sum)
```

```{r}
#| echo: false
knitr::kable(tidy(lm_viagra_sum))
```

```{r}
#| echo: false
ggplot(data = viagra_sum_coded,
       mapping = aes(x = dose,
                     y = libido)) +
  stat_summary(fun = mean,
               geom="bar") +
  annotate(geom = "text", label = "3.4666667 - 1.2666667", x= 1, y = 2.2000+.2) +
  annotate(geom = "text", label = "3.4666667 - 0.2666667", x= 2, y = 2.2000+1.0000+.2) +
  annotate(geom = "text", label = "3.4666667 + 1.2666667+ 0.2666667", x= 2.95, y = 2.2000+2.8000+.2) +
  scale_y_continuous(breaks = seq(0, 5, by = .5)) +
  theme_light(12)
```

### ANOVA values

```{r}
#| eval: false
glance(lm_viagra_sum)
```

```{r}
#| echo: false
knitr::kable(glance(lm_viagra_sum))
```

From this output you can see that for this one-way ANOVA, F(2,12) = 5.118644, p = 0.0246943.

```{r}
summary(lm_viagra_sum)
```

From this output you can (again) see that for this one-way ANOVA, F(2,12) = 5.118644, p = 0.0246943.

Note: A good exam question would be to present a table like this an then ask you the mean for each group. With treatment/dummy coding the regression weight indicate for the reference group the mean of that group. For the other groups, the regression weights indicate the difference from the reference group.
